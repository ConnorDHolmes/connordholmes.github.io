:root {
  --mode-swap: 0.5s ease;
  --bgr: #131310;
  --acc: #f2f3e2;
}

/* SHARED */

* {
  box-sizing: border-box;
  backface-visibility: hidden;
}

html,
body {
  height: 100vh;
  /* use dvh if available */
  height: 100dvh;
}

html,
body,
button {
  cursor: none !important;
}

body::after,
header,
c-screen,
c-cursor::after,
c-reflection,
ul,
li section {
  contain: strict;
}

c-cursor,
c-scene,
c-room,
main {
  contain: layout size;
}

nav,
button,
footer {
  contain: layout;
}

/* header {
  contain: content;
} */

c-cursor,
c-cursor::after,
body::before,
body::after,
nav,
header,
main,
button::before,
button::after,
c-screen,
c-screen::before,
c-reflection,
c-reflection::before,
c-reflection::after,
ul,
li::after,
section,
footer,
c-control::before {
  position: absolute;
}

body::before,
c-cursor,
c-cursor::after,
main,
button::before,
button::after,
c-reflection::before,
c-reflection::after,
c-reflection c-screen,
ul {
  inset: 0;
}

body::before,
body::after,
c-cursor::after,
button::before,
button::after,
c-screen::before,
c-reflection::before,
c-reflection::after,
li::after,
c-control::before,
c-control::after {
  content: "";
  box-sizing: border-box;
  backface-visibility: hidden;
}

button,
c-screen,
c-control {
  pointer-events: auto;
}

c-cursor,
body::before,
body::after,
c-scene,
c-reflection c-screen,
section,
footer,
c-control::before,
c-control[hide] {
  pointer-events: none;
}

c-room,
nav,
button {
  transform-style: preserve-3d;
}

body,
h1,
h2,
h3,
ul,
li,
p {
  margin: 0;
}

nav,
ul,
footer {
  display: flex;
}

c-reflection,
c-screen::before,
li.selected,
li.selected::after,
c-control,
c-control:hover::before {
  transform: translate3d(0, 0, 0);
}

.overlay::before,
c-cursor,
c-reflection::before,
.light-mode c-reflection::after,
li.selected,
section.show,
c-control:hover::before {
  opacity: 1;
}

body::before,
c-cursor[hide],
c-reflection::after,
.light-mode c-reflection::before,
c-control[hide],
c-control::before {
  opacity: 0;
}

h1,
h2,
button,
li,
h3,
section span,
footer {
  text-transform: lowercase;
}

h1,
li,
h3 {
  font-family: "Unbounded";
}

body,
ul {
  overflow: hidden;
}

button {
  color: transparent;
}

body,
c-scene {
  display: grid;
  place-content: center;
}

body,
button::after {
  color: var(--acc);
}

body,
c-control::before {
  background-color: var(--bgr);
}

c-cursor,
section,
c-control {
  will-change: opacity;
}

c-cursor::after,
c-room,
button,
button::before {
  will-change: transform;
}

/* OUTER */

html {
  overscroll-behavior: none;
}

body {
  font-family: "Manrope";
  text-rendering: optimizeSpeed;
  transition: background-color var(--mode-swap);
  user-select: none;
  /* for safari */
  -webkit-user-select: none;
}

body::before {
  z-index: 2;
  background-color: inherit;
  transition: opacity 1s ease 1s;
}

@supports selector(:has(*)) {
  body:has(nav.remove)::before {
    content: none;
  }
}

@keyframes noise {
  0% {
    transform: translate3d(0, 0, 0);
  }
  50% {
    transform: translate3d(-64px, -128px, 0);
  }
  100% {
    transform: translate3d(-128px, -64px, 0);
  }
}

body::after {
  z-index: 1;
  inset: 0 auto auto 0;
  width: calc(100% + 128px);
  height: calc(100% + 128px);
  background-image: url("images/noise_overlay.webp");
  background-size: 1200px auto;
  animation: 0.25s noise steps(3) infinite;
}

.light-mode {
  --bgr: #f2f3e2;
  --acc: #131310;
}

.overlay,
.performance-mode {
  --mode-swap: 0s linear;
}

.performance-mode::after {
  animation: none;
  display: none;
}

/* cursor */

c-cursor {
  width: 10px;
  height: 10px;
  mix-blend-mode: exclusion;
}

c-cursor::after {
  border-radius: 50%;
  background-color: #ccc;
  transition: transform 0.2s ease;
}

body:active c-cursor::after {
  transform: scale3d(0.66, 0.66, 1);
}

c-cursor[clickable]::after {
  transform: scale3d(2.5, 2.5, 1);
}

body:active c-cursor[clickable]::after {
  transition-duration: 0.1s;
  transform: scale3d(1.5, 1.5, 1);
}

/* 3D SCENE */

c-scene {
  width: 576px;
  height: 740px;
  perspective: 1024px;
}

c-room {
  width: 1024px;
  height: 576px;
  /* initial transform setting */
  transform: translate3d(0, 0, -864px) rotate3d(0, 1, 0, 90deg);
}

c-room[backface] {
  backface-visibility: visible;
}

nav {
  inset: auto 0 176px 0;
  gap: 24px;
  justify-content: center;
  transform: rotateY(-90deg) translateZ(512px);
}

button {
  position: relative;
  padding: 10px 16px;
  background-color: transparent;
  font-family: inherit;
  font-size: 18px;
  line-height: 120%;
  letter-spacing: 0.05em;
  box-shadow: inset 0 0.5px 0 1px var(--acc);
  transform: scale3d(1, 1, 1);
  transition: transform 0.25s ease, box-shadow var(--mode-swap),
    color var(--mode-swap), background-color var(--mode-swap);
}

button,
button:focus {
  border: none;
}

button:focus {
  outline: none;
}

.light-mode button {
  box-shadow: inset 0 -0.5px 0 1px var(--acc);
}

button,
button::before {
  border-radius: 32px;
}

button::before {
  background-color: var(--acc);
  transition: transform 0.3s ease, background-color var(--mode-swap),
    color var(--mode-swap);
  transform: scale3d(0, 0, 1);
}

button.hov::before {
  transform: scale3d(1, 1, 1);
}

button::after {
  content: attr(data-text);
  will-change: filter, opacity;
  padding: inherit;
  filter: invert(0);
  transform: translate3d(0, -4px, 32px);
  transition: filter 0.25s ease, color var(--mode-swap);
}

button.hov::after {
  filter: invert(1);
}

nav.hide button {
  transform: scale3d(0, 0, 1);
}

nav.remove {
  transform-style: flat;
  visibility: hidden;
  display: none;
}

nav.remove button {
  transform: none;
  transform-style: flat;
}

header {
  contain-intrinsic-height: 205px;
  inset: 128px 0 auto 0;
  text-align: center;
  transform: rotateY(-90deg) translateZ(-768px);
  transition: color var(--mode-swap);
}

h1 {
  font-size: 108px;
  font-weight: 400;
}

h2 {
  font-size: 52px;
  font-weight: 300;
  letter-spacing: 0.02em;
}

main {
  transform: translateZ(-512px);
}

c-screen {
  inset: 8px;
  width: 1008px;
  height: 560px;
  border-radius: 12px;
}

c-reflection {
  inset: 584px auto auto 8px;
  width: 1008px;
  height: 216px;
  filter: blur(4px) opacity(0.6);
}

.performance-mode c-reflection {
  display: none;
}

c-reflection::before,
c-reflection::after {
  z-index: 1;
  transition: opacity var(--mode-swap);
}

c-reflection::before {
  background: linear-gradient(to top, #131310, transparent);
}

c-reflection::after {
  background: linear-gradient(to top, #f3f4e3, transparent);
}

c-reflection c-screen {
  transform: scaleY(-1);
}

/* SCREEN */

c-screen::before {
  inset: 0 auto auto 0;
  width: 2016px;
  height: 1120px;
  /* background: linear-gradient(to bottom right, #ff3366, #2ec4b6, #ff4500); */
  background: linear-gradient(to bottom right, red, #2ec4b6, #ff4500);
  transition: transform var(--mode-swap);
}

.light-mode c-screen::before {
  transform: translate3d(-1008px, -560px, 0);
}

ul {
  will-change: scroll-position;
  --gap: 28px;
  padding: 0;
  width: inherit;
  height: inherit;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--gap);
  transition: color var(--mode-swap);
}

li {
  will-change: transform, opacity;
  padding-left: 6px;
  /* height: 50px; */
  font-size: 16px;
  font-weight: 250;
  line-height: 55px;
  transform: translate3d(-4px, 0, 0);
  opacity: 0.6;
  transition: transform 0.125s ease;
}

li.hide {
  opacity: 0;
  pointer-events: none;
}

li:first-child {
  margin-top: var(--gap);
}

li::after {
  inset: 40px 0 auto 0;
  height: 1px;
  background-color: var(--acc);
  transition: transform 0.2s ease, background-color var(--mode-swap);
  transform: translate3d(-100%, 0, 0);
}

li::marker {
  content: none;
}

li:not(.selected).hov {
  opacity: 0.75;
  transform: translate3d(-2px, 0, 0);
}

section {
  will-change: transform, opacity;
  inset: auto 0 auto auto;
  /* width: 736px; */
  width: 672px;
  height: 100%;
  display: flex;
  /* padding-top: 380px; */
  padding-top: 380.5px;
  flex-direction: column;
  transform-origin: right;
  transform: translate3d(0, 0, -1px) scale3d(0.97, 0.97, 1);
  opacity: 0;
  pointer-events: none;
  transition: color var(--mode-swap), transform 0.15s ease, opacity 0.15s ease;
}

section.show {
  transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
}

img {
  inset: 64px -3.5px auto auto;
  position: absolute;
  z-index: -1;
  width: 100%;
  border-radius: 12px 0 0 0;
  -webkit-mask-image: linear-gradient(182deg, black 50%, transparent);
  mask-image: linear-gradient(182deg, black 50%, transparent);
}

h3 {
  position: relative;
  font-size: 52px;
  font-weight: 300;
  line-height: 120%;
}

section span {
  font-size: 18px;
  letter-spacing: 0.025em;
  font-weight: 400;
  margin-bottom: 12px;
}

section span,
p {
  position: relative;
  left: 2.5px;
}

p {
  font-size: 12px;
  letter-spacing: 0.025em;
  max-width: 352px;
}

h3,
section span,
p {
  will-change: transform, opacity;
  opacity: 0;
  transform: translate3d(0, 4px, 0);
  transition: transform 0.25s ease, opacity 0.25s ease;
}

section.show h3,
section.show span,
section.show p {
  transform: translate3d(0, 0, 0);
}

section.show h3,
section.show span {
  opacity: 1;
}

section.show p {
  opacity: 0.75;
}

section.show h3 {
  transition-delay: 0.1s, 0.1s;
}

section.show span {
  transition-delay: 0.15s, 0.15s;
}

section.show p {
  transition-delay: 0.2s, 0.2s;
}

/* FOOTER */

footer {
  inset: auto 16px 16px 16px;
  align-items: center;
  gap: 24px;
  font-size: 14px;
  letter-spacing: 0.05em;
  line-height: 110%;
  color: var(--accent);
  transition: color var(--mode-swap);
}

footer span {
  margin-right: auto;
}

c-control {
  transition: opacity 0.35s ease;
}

c-control::before {
  content: attr(aria-label);
  will-change: opacity, transform;
  inset: auto 0 calc(100% + 8px) auto;
  width: calc(100% + 48px);
  padding: 6px 8px 8px 8px;
  border: 0.25px solid;
  border-color: inherit;
  border-radius: 8px 8px 0 8px;
  font-size: 12px;
  line-height: 16px;
  letter-spacing: 0.025em;
  transform: translate3d(0, 4px, 0);
  transition: opacity 0.15s ease, transform 0.25s ease,
    background-color var(--mode-swap);
}

c-control::after {
  content: attr(key);
  margin-left: 0.4em;
  display: inline-flex;
  padding: 4px 8px;
  border: 1px solid;
  border-color: inherit;
  border-radius: 4px;
}

footer:hover > c-control:not(:hover):not([hide]) {
  opacity: 0.5;
}
